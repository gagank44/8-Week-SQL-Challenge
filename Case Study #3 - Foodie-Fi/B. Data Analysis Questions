           B. Data Analysis Questions
1.How many customers has Foodie-Fi ever had?

SELECT count(DISTINCT customer_id) AS 'distinct customers'
FROM subscriptions;

2.What is the monthly distribution of trial plan start_date values for our dataset -
use the start of the month as the group by value

SELECT 
    STRFTIME('%m', start_date) AS month,
    COUNT(DISTINCT customer_id) AS 'monthly_distribution'
FROM 
    subscriptions
JOIN 
    plans ON subscriptions.plan_id = plans.plan_id
WHERE 
    plans.plan_id = 0
GROUP BY 
    STRFTIME('%m', start_date);

 
3.What plan start_date values occur after the year 2020 for our dataset? 
Show the breakdown by count of events for each plan_name

SELECT 
    plans.plan_id,
    plans.plan_name,
    COUNT(*) AS 'count_of_events'
FROM 
    subscriptions
JOIN 
    plans ON subscriptions.plan_id = plans.plan_id
WHERE 
    STRFTIME('%Y', start_date) > '2020'
GROUP BY 
    plans.plan_id, plans.plan_name;

4.What is the customer count and percentage of customers who have churned rounded to 1 decimal place?

SELECT plan_name, count(DISTINCT customer_id) as 'churned customers',
       round(100 *count(DISTINCT customer_id) / (
       SELECT count(DISTINCT customer_id) AS 'distinct customers'
FROM subscriptions
       ),2) as 'churn percentage'
FROM subscriptions
JOIN plans USING (plan_id)
where plan_id=4;

5.How many customers have churned straight after their initial free trial - 
what percentage is this rounded to the nearest whole number?


with cte as(SELECT 
  s.customer_id, 
  s.plan_id, 
  p.plan_name,
  ROW_NUMBER() OVER (PARTITION BY s.customer_id ORDER BY s.plan_id) AS plan_rank
FROM subscriptions s
JOIN plans p
  ON s.plan_id = p.plan_id)
  
  SELECT 
  COUNT(*) AS churn_count,
  ROUND(100 * COUNT(*) / (
    SELECT COUNT(DISTINCT customer_id) 
    FROM subscriptions),0) AS churn_percentage
FROM cte
WHERE plan_id = 4
  AND plan_rank = 2;


6.What is the number and percentage of customer plans after their initial free trial?

with cte as(SELECT 
  customer_id, 
  plan_id, 
  LEAD(plan_id, 1) OVER(PARTITION BY customer_id ORDER BY plan_id) as next_plan
FROM subscriptions)

sELECT 
  next_plan, 
  COUNT(*) AS conversions,
  ROUND(100 * COUNT(*) / (
    SELECT COUNT(DISTINCT customer_id) 
    FROM subscriptions),1) AS conversion_percentage
FROM cte
WHERE next_plan IS NOT NULL 
  AND plan_id = 0
GROUP BY next_plan
ORDER BY next_plan;

8.How many customers have upgraded to an annual plan in 2020?

SELECT 
    COUNT(distinct customer_id) AS total_customer
FROM 
    subscriptions
JOIN 
    plans USING(plan_id)
WHERE 
    plan_id = 3 
    AND STRFTIME('%Y', start_date) <= '2020';


9.How many days on average does it take for a customer to an annual plan from the day they join Foodie-Fi?


WITH 
  trial_plan AS 
  (SELECT 
      customer_id, 
      start_date AS trial_date
  FROM subscriptions
  WHERE plan_id = 0
  ),
  
  annual_plan AS
  (SELECT 
      customer_id, 
      start_date AS annual_date
  FROM subscriptions
  WHERE plan_id = 3
  )

SELECT 
    ROUND(AVG(JULIANDAY(ap.annual_date) - JULIANDAY(tp.trial_date))) AS avg_days_to_upgrade
FROM trial_plan tp
INNER JOIN annual_plan ap
    ON tp.customer_id = ap.customer_id


11.How many customers downgraded from a pro monthly to a basic monthly plan in 2020?


with cte as(SELECT 
  customer_id, 
  plan_id, 
  start_date,
  LEAD(plan_id, 1) OVER(PARTITION BY customer_id ORDER BY plan_id) as next_plan
FROM subscriptions)

SELECT 
  COUNT(*) AS downgraded
FROM cte
WHERE start_date <= '2020-12-31'
  AND plan_id = 2 
  AND next_plan = 1;













